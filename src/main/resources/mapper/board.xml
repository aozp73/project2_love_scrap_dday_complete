<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="shop.mtcoding.jobara.board.model.BoardRepository">

    <select id="findAll" resultType="shop.mtcoding.jobara.board.model.Board">
        select * from board_tb
    </select>

    <select id="findAllByUserIdForLangMatching" resultType="shop.mtcoding.jobara.board.dto.BoardResp$BoardListRespDto">
        select bt.id, bt.title, ct.company_name, ut.id user_id, ut.profile from

        ( select * from board_tb 
          where board_tb.id in (
          SELECT distinct bt.board_id 
          FROM BOARDTECH_TB bt
          inner join employeetech_tb dt
          where bt.skill in 
          (select dt.skill where dt.user_id = #{userId})) ) bt

        inner join company_tb ct
        on bt.user_id = ct.user_id
        
        inner join user_tb ut
        on bt.user_id=ut.id
    </select>




    <select id="findAllWithCompany" resultType="shop.mtcoding.jobara.board.dto.BoardResp$BoardListRespDto">
        
      <choose>
            <!-- selectBox 키워드  lang (기술매칭) 일때 -->
            <when test="keyword != null and keyword.equals('lang')">
            
                SELECT bt.id, bt.title, ct.company_name, ut.id user_id, ut.profile, bt.dday
                <if test='userId != 0'>
                , CASE WHEN lt.id IS NOT NULL THEN lt.id ELSE 0 END as love_id,
                CASE WHEN lt.id IS NOT NULL THEN 'fa-solid' ELSE '' END as css
                </if>
                FROM (
                    SELECT id, title, user_id, DATEDIFF(DAY, now(), deadline) dday 
                    FROM board_tb 
                    WHERE board_tb.id IN (
                        SELECT DISTINCT bt.board_id 
                        FROM boardtech_tb bt
                        INNER JOIN employeetech_tb dt ON bt.skill = dt.skill
                        WHERE dt.user_id = #{userId}
                    )  
                ) bt
                INNER JOIN company_tb ct ON bt.user_id = ct.user_id
                INNER JOIN user_tb ut ON bt.user_id = ut.id
                <if test='userId != 0'>
                LEFT OUTER JOIN love_tb lt ON bt.id = lt.board_id AND lt.user_id = #{userId}
                </if>
                WHERE bt.dday >= 0

                ORDER BY dday
                OFFSET #{startNum} ROWS 
                FETCH NEXT #{row} ROWS ONLY
            </when>



            <!-- 1. selectBox 키워드 x, 2. 키워드가 마감순-->
            <otherwise>
                    SELECT bt.id, bt.title, ct.company_name, ut.id user_id, ut.profile, DATEDIFF(DAY, now(), bt.deadline) dday
                    <!-- 키워드x, 키워드 마감순이면서 "user.role이 employee일 때" : 각 유저별 좋아요 반영-->
                    <if test='userId != 0'>
                    , 
                    CASE WHEN lt.id IS NOT NULL THEN lt.id ELSE 0 END as love_id,
                    CASE WHEN lt.id IS NOT NULL THEN 'fa-solid' ELSE '' END as css
                    </if>
                    FROM BOARD_TB bt

                    inner join company_tb ct
                    on bt.user_id = ct.user_id

                    inner join user_tb ut
                    on bt.user_id=ut.id

                    <if test='userId != 0'>
                    left outer join love_tb lt
                    on bt.id = lt.board_id
                    and lt.user_id = #{userId}
                    </if>

                    where DATEDIFF(DAY, now(), bt.deadline) >= 0
                    <if test='keyword == null or keyword == ""'>
                    ORDER BY bt.id desc
                    </if>
                    
                    <if test="keyword != null and keyword.equals('deadline')">
                    ORDER BY dday
                    </if>
                    
                    OFFSET #{startNum} ROWS 
                    FETCH NEXT #{row} ROWS ONLY
            </otherwise>
        </choose>
      
    </select>


	<select id="paging" resultType="shop.mtcoding.jobara.board.dto.BoardResp$PagingDto">
        <choose>

                <!-- selectBox 키워드가 lang일 떄 paging -->
                <when test="keyword != null and keyword.equals('lang')">
                    SELECT count(*) total_count,  CEILING( count(*) / #{row} ) total_page, #{page} current_page,
                    case when #{page} = 0 then 1
                        else 0 
                        end first,
                    case when #{page} = CEILING( count(*) / #{row} ) - 1 then 1
                        else 0 
                        end last

                    FROM 
                        
                      ( SELECT id, title, user_id, DATEDIFF(DAY, now(), deadline) dday 
                        FROM board_tb 
                        WHERE DATEDIFF(DAY, now(), deadline) >= 0 and  board_tb.id IN 
                        (
                            SELECT DISTINCT btt.board_id 
                            FROM boardtech_tb btt
                            INNER JOIN employeetech_tb ett ON btt.skill = ett.skill
                            WHERE ett.user_id = #{userId})  )
                </when>

                      

                <!-- selectBox 키워드가 없을 때 paging  -->
                <otherwise>
                    SELECT count(*) total_count,  CEILING( count(*) / #{row} ) total_page, #{page} current_page,
                    case when #{page} = 0 then 1
                        else 0 
                        end first,
                    case when #{page} = CEILING( count(*) / #{row} ) - 1 then 1
                        else 0 
                        end last
                    FROM board_tb
                    where DATEDIFF(DAY, now(), deadline) >= 0
                </otherwise>
        </choose>
	</select>


    <!-- <select id="findAllWithCompany" resultType="shop.mtcoding.jobara.board.dto.BoardResp$BoardListRespDto">
        SELECT bt.id, bt.title, ct.company_name, ut.id user_id, ut.profile FROM BOARD_TB bt
        inner join company_tb ct
        on bt.user_id = ct.user_id
        inner join user_tb ut
        on bt.user_id=ut.id
    </select> -->

    <select id="findAllWithCompanyToMain" resultType="shop.mtcoding.jobara.board.dto.BoardResp$BoardMainRespDto">
        SELECT bt.id, bt.title, ct.company_name, ut.id user_id, ut.profile FROM BOARD_TB bt
        inner join company_tb ct
        on bt.user_id = ct.user_id
        inner join user_tb ut
        on bt.user_id=ut.id
        limit 4
    </select>

    <select id="findAllByIdWithCompany" resultType="shop.mtcoding.jobara.board.dto.BoardResp$MyBoardListRespDto">
        SELECT bt.id, bt.title, ct.company_name, ut.id user_id, ut.profile, DATEDIFF(DAY, now(), deadline) dday FROM BOARD_TB bt
        inner join company_tb ct
        on bt.user_id = ct.user_id
        inner join user_tb ut
        on bt.user_id=ut.id
        where ut.id = ${userId}
        order by dday 
    </select>
    
    <select id="findAllScrapByIdWithCompany" resultType="shop.mtcoding.jobara.board.dto.BoardResp$MyScrapBoardListRespDto">
        SELECT bt.id, bt.title, ct.company_name, ut.id user_id, ut.profile, lt.id love_id, 'fa-solid' css, DATEDIFF(DAY, now(), bt.deadline) dday 
        FROM BOARD_TB bt
        inner join company_tb ct
        on bt.user_id = ct.user_id
        inner join user_tb ut
        on bt.user_id=ut.id
        inner join love_tb lt
        on lt.board_id = bt.id
        where lt.user_id = #{userId}
        order by dday 
    </select>

    <select id="findById" resultType="shop.mtcoding.jobara.board.model.Board">
        select * from board_tb where id = #{id}
    </select>
    
    <select id="findByIdForUpdate" resultType="shop.mtcoding.jobara.board.dto.BoardResp$BoardUpdateRespDto">
        select * from board_tb where id = #{id}
    </select>

    <select id="findByIdWithCompany" resultType="shop.mtcoding.jobara.board.dto.BoardResp$BoardDetailRespDto">
        SELECT bt.id, bt.title, bt.content, bt.career, bt.job_type, bt.education, bt.favor, ct.company_name, ct. company_scale, ct.company_field,  ut.id user_id,  ut.profile FROM BOARD_TB bt 
        inner join company_tb ct
        on bt.user_id = ct.user_id
        inner join user_tb ut
        on bt.user_id=ut.id
        where bt.id = #{boardId}
    </select>


    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into board_tb (user_id, title, content, career, job_type, education, favor, deadline, created_at) 
        values(#{userId}, #{title}, #{content}, #{career}, #{jobType}, #{education}, #{favor}, #{deadline}, now())
    </insert>


    <delete id="deleteById">
        delete from board_tb where id = #{id} 
    </delete>

    <update id="updateById">
        update board_tb 
           set title = #{title},
               content = #{content},
               career = #{career},
               job_type = #{jobType},
               education = #{education},
               favor = #{favor},
               deadline = #{deadline}
        where id = #{id} 
    </update>    
</mapper>